# Runs all required checks of any code being committed to the main branch 
name: code checks

on:
  pull_request: 
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:


jobs:

  install-dependencies:
    runs-on: ubuntu-latest

    steps:
      # These steps to install Boost are taken from https://raymii.org/s/articles/Github_Actions_cpp_boost_cmake_speedup.html
    - name: Cache boost
      uses: actions/cache@v1.0.3
      id: cache-boost
      with:
        path: "~/boost"
        key: libboost-all-dev
    - name: Install boost
      env:
        CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then
          sudo cp --force --recursive ~/boost/* /
        else
          sudo apt-get update && sudo apt-get install -yq libboost-all-dev
          mkdir -p ~/boost
          for dep in libboost-all-dev; do
              dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
          done
        fi

  build:
    needs: install-dependencies
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Create build environment
      run: mkdir build

    - name: Build
      run: cmake -Bbuild -H.

    - name: Make
      run: cmake --build build/ --target all

    - name: Archive built files
      uses: actions/upload-artifact@v2
      with:
        name: build
        #TODO: Optimise this to ignore unnessecary files
        path: |
          build

  tests:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download built files
      uses: actions/download-artifact@v2
      with:
        name: build

    - name: Run unit tests
      run: cd build && ctest --verbose

    - name: Run simulation demo
      run: cd build/test && ./demo_test

  linter:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.11
      with:
        source: '.'
        extensions: 'h,cpp'
        clangFormatVersion: 11
        exclude: test/*
